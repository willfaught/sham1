(module type-tests mzscheme

  (define prelude
#<<---
#reader(lib "reader.ss" "smootxes")

#module ("tuples")
#include ("scapegoat.ss")
---
    )
  
  (define tests
    `(("zbx"
       #px"Unbound variable")
      ("let vector-import-test-2 = 
  let v = (vector1 :G (int * (lump -> lump))) in
    let b = first v in
      let t = second v in
        t b;;")
      ))
  
  (define (run-type-test pr)
    (cond [(regex? (cadr pr)) ]
          [else (run)]))
  
  (map run-type-test tests)
   )
 
  
 (define a (parameterize ([read-accept-reader #t])
             (read-syntax "smootxy-test" (open-input-string t1))))
)